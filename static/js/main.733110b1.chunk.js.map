{"version":3,"sources":["components/Header.jsx","redux/actions/index.js","pages/Game.jsx","pages/Login.js","pages/Settings.jsx","pages/Feedback.js","pages/Ranking.jsx","App.js","redux/reducers/player.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Header","this","props","name","player","score","className","data-testid","src","alt","Component","connect","state","newAction","randomAlternatives","payload","dispatch","fetch","request","json","data","token","requestQ","data1","question","type","c","Game","random","array","sort","Math","nextQuestion","history","makeTimer","setState","nextButton","button","count","localStorage","getItem","setItem","rankingData","JSON","parse","playerData","stringify","push","randomAlt","handleAnswer","target","results","correct","map","obj","correct_answer","dificult","difficulty","buttons","parentElement","children","clearInterval","time","Array","from","e","innerHTML","calculo","setInterval","PrevState","sumToScore","undefined","soma","console","log","teste","disabledbutton","bind","prevProps","prevState","response_code","length","all","incorrect_answers","correção","alternatives","a","index","answer","datatest","category","key","value","onClick","disabled","Login","handlechange","enviainfo","user","validation","validatioEmail","gravatarEmail","test","placeholder","onChange","React","Settings","Feedback","assertions","hidden","Ranking","b","App","exact","path","component","INITIAL_STATE","action","timer","window","Cypress","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.733110b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './header.css';\n\nclass Header extends Component {\n  render() {\n    const { player: { name }, score } = this.props;\n    return (\n      <div className=\"container-led\">\n        <h1 data-testid=\"header-player-name\">{name}</h1>\n        <img\n          data-testid=\"header-profile-picture\"\n          src=\"https://www.gravatar.com/avatar/c19ad9dbaf91c5533605fbf985177ccc\"\n          alt=\"foto de perfil\"\n        />\n        <h1 data-testid=\"header-score\">{score}</h1>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n  score: state.player.score,\n});\n\nHeader.propTypes = {\n  player: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  score: PropTypes.number.isRequired,\n};\nexport default connect(mapStateToProps)(Header);\n","const PageLogin = 'player';\n\nfunction user(json) {\n  return { type: PageLogin, state: json };\n}\n\nfunction newAction(payload) {\n  return async (dispatch) => {\n    const request = await fetch('https://opentdb.com/api_token.php?command=request');\n    const data = await request.json();\n    payload.token = data;\n    const requestQ = await fetch(`https://opentdb.com/api.php?amount=5&token=${data.token}`);\n    const data1 = await requestQ.json();\n    payload.question = data1;\n    dispatch(user(payload));\n  };\n}\n\nexport function timer(play) {\n  return { type: 'timer', state: play };\n}\n\n// action que incrementa valor à score se o usuário acertar\nexport function score(pontos) {\n  return { type: 'score', payload: pontos };\n}\nexport function button(state) {\n  return { type: 'button', button: state };\n}\n\nexport default newAction;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport Header from '../components/Header';\nimport { score } from '../redux/actions/index';\nimport './game.css';\n\nlet c = 0; // current\nlet randomAlternatives;\n\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      button: false,\n      count: 30,\n      nextButton: false,\n      randomAlt: true,\n      teste: 0,\n    };\n    this.disabledbutton = this.disabledbutton.bind(this);\n  }\n\n  componentDidMount() {\n    this.makeTimer();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { token, history } = this.props;\n    if (prevState.count === 1) {\n      clearInterval(this.time);\n      this.disabledbutton();\n    }\n    if (token) {\n      localStorage.setItem('token', token.token);\n    }\n\n    if (token.question.response_code !== 0) {\n      history.push('/');\n    }\n  }\n\n  random = (array) => {\n    const noMagicNumber = 0.5;\n    return array.sort(() => Math.random() - noMagicNumber);\n  };\n\n  nextQuestion = () => {\n    const { history, token } = this.props;\n    const MAX_QUESTIONS = 4;\n    this.makeTimer();\n    this.setState({ nextButton: false, button: false, count: 30 });\n    if (c === MAX_QUESTIONS) {\n      if (!localStorage.getItem('ranking')) {\n        localStorage.setItem('ranking', '[]');\n      }\n      const rankingData = JSON.parse(localStorage.getItem('ranking'));\n      const playerData = [...rankingData, { name: token.name, score: token.score }];\n      localStorage.setItem('ranking', JSON.stringify(playerData));\n      history.push('/feedback');\n      c = 0;\n    } else {\n      c += 1;\n      this.setState({ randomAlt: true });\n    }\n  }\n\n  handleAnswer = ({ target }) => {\n    const { results } = this.props;\n    const correct = results.map((obj) => obj.correct_answer)[c];\n    const dificult = results.map((obj) => obj.difficulty)[c];\n    const buttons = target.parentElement.children;\n    clearInterval(this.time);\n    this.setState({ nextButton: true });\n    Array.from(buttons).map((e) => {\n      if (e.innerHTML === correct) {\n        e.className = 'green-border';\n        if (target.innerHTML === correct) this.calculo(this.dificult(dificult));\n      } else {\n        e.className = 'red-border';\n      }\n      return e;\n    });\n  }\n\n  makeTimer = () => {\n    const { count } = this.state;\n    const second = 1000;\n    this.time = setInterval(() => {\n      if (count > 0) {\n        this.setState((PrevState) => ({\n          count: PrevState.count - 1,\n        }));\n      }\n    }, second);\n  }\n\n  dificult = (dificult) => {\n    const HARD = 3;\n    if (dificult === 'easy') return 1;\n    if (dificult === 'medium') return 2;\n    if (dificult === 'hard') return HARD;\n  }\n\n  calculo = (dificult) => {\n    const { sumToScore } = this.props;\n    const { count } = this.state;\n    const Magic = 10;\n    if (count !== undefined) {\n      const soma = Magic + (count * dificult);\n      console.log(soma);\n      this.setState(({\n        teste: soma,\n      }), () => {\n        const { teste } = this.state;\n        sumToScore(teste);\n      });\n    }\n  }\n\n  disabledbutton() {\n    this.setState({\n      button: true,\n      nextButton: true,\n    });\n  }\n\n  render() {\n    const { results } = this.props;\n    const { button, nextButton, randomAlt, count } = this.state;\n    if (results?.length > 0) {\n      const all = results.map((obj) => [...obj.incorrect_answers, obj.correct_answer])[c];\n\n      const correção = results.map((obj) => obj.correct_answer)[c];\n      const alternatives = all.map((a, index) => ({\n        answer: a,\n        datatest: a === correção ? 'correct-answer' : `wrong-answer-${index}`,\n      }));\n      if (randomAlt) {\n        randomAlternatives = this.random(alternatives);\n        this.setState({ randomAlt: false });\n      }\n\n      return (\n        <div>\n          <Header />\n          <hr />\n          <div className=\"main-container\">\n            {results.map(({ category, question }, index) => (\n              <div key={ index } className=\"game-container\">\n                <h2 className=\"centraliza\">{count}</h2>\n                <h2 data-testid=\"question-category\">{category}</h2>\n                <p data-testid=\"question-text\">{question}</p>\n                <div data-testid=\"answer-options\">\n                  {randomAlternatives?.map(({ answer, datatest }, key) => (\n                    <button\n                      className=\"alternatives-buttons\"\n                      value={ answer }\n                      key={ key }\n                      type=\"button\"\n                      data-testid={ datatest }\n                      onClick={ this.handleAnswer }\n                      disabled={ button }\n                    >\n                      {answer}\n                    </button>\n                  ))}\n                </div>\n                {nextButton && (\n                  <button\n                    className=\"alternatives-buttons\"\n                    type=\"button\"\n                    onClick={ this.nextQuestion }\n                    data-testid=\"btn-next\"\n                  >\n                    Next\n                  </button>)}\n              </div>\n            ))[c]}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"loading-container\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  token: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sumToScore: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  sumToScore: (payload) => dispatch(score(payload)),\n});\n\nconst mapStateToProps = (state) => ({\n  token: state.player,\n  results: state.player.question?.results,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport newAction from '../redux/actions/index';\nimport './login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      button: true,\n      validation: false,\n    };\n    this.validatioEmail = this.validatioEmail.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { name, gravatarEmail } = this.state;\n    if (prevState.name !== name) {\n      this.validatioEmail();\n    }\n    if (prevState.gravatarEmail !== gravatarEmail) {\n      this.validatioEmail();\n    }\n  }\n\n  handlechange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  enviainfo = () => {\n    const { user, history } = this.props;\n    user(this.state);\n    history.push('/game');\n  }\n\n  validatioEmail() {\n    const numer = 3;\n    const { gravatarEmail, name, validation } = this.state;\n    const valid = /\\S+@\\S+\\.\\S+/;\n    this.setState({\n      validation: valid.test(gravatarEmail),\n    });\n\n    if (name.length >= numer && validation) {\n      this.setState({\n        button: false,\n      });\n    }\n    if (name.length < numer || validation === false) {\n      this.setState({\n        button: true,\n      });\n    }\n  }\n\n  render() {\n    const { history } = this.props;\n    const { button, gravatarEmail, name } = this.state;\n    return (\n      <div className=\"login-container\">\n        <div className=\"login efeito-vidro\">\n          <input\n            type=\"text\"\n            data-testid=\"input-player-name\"\n            placeholder=\"Nome\"\n            value={ name }\n            name=\"name\"\n            onChange={ this.handlechange }\n          />\n          <input\n            type=\"text\"\n            data-testid=\"input-gravatar-email\"\n            placeholder=\"E-mail\"\n            onChange={ this.handlechange }\n            value={ gravatarEmail }\n            name=\"gravatarEmail\"\n          />\n          <button\n            className=\"play-config-buttons\"\n            type=\"button\"\n            data-testid=\"btn-play\"\n            disabled={ button }\n            onClick={ this.enviainfo }\n          >\n            Play\n          </button>\n          <button\n            className=\"play-config-buttons\"\n            onClick={ () => history.push('/settings') }\n            data-testid=\"btn-settings\"\n            type=\"button\"\n          >\n            Configurações\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  user: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  user: (state) => dispatch(newAction(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport './settings.css';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1\n          className=\"settings-header\"\n          data-testid=\"settings-title\"\n        >\n          Settings\n\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './feedback.css';\n\nclass Feedback extends Component {\n  render() {\n    const { name, score, assertions, history } = this.props;\n    const number = 3;\n    return (\n      <div className=\"main-feedback\">\n        <header className=\"feedback-header\">\n          <h2 data-testid=\"header-player-name\">{name}</h2>\n          <h2 data-testid=\"feedback-total-score\">{score}</h2>\n          <h2 data-testid=\"feedback-total-question\">{assertions}</h2>\n          <img\n            data-testid=\"header-profile-picture\"\n            src=\"https://www.gravatar.com/avatar/c19ad9dbaf91c5533605fbf985177ccc\"\n            alt=\"foto de perfil\"\n          />\n        </header>\n        <div className=\"container-led feedback\">\n          <h2 hidden data-testid=\"header-score\">{score}</h2>\n          <h2\n            className={ assertions < number ? 'red-feedback' : 'blue-feedback' }\n            data-testid=\"feedback-text\"\n          >\n            {assertions < number ? 'Could be better... 😢' : 'Well Done! 🥳'}\n\n          </h2>\n        </div>\n        <div className=\"botoes-feedback\">\n          <button\n            className=\"btn-feedback\"\n            data-testid=\"btn-play-again\"\n            type=\"button\"\n            onClick={ () => history.push('/') }\n          >\n            Play Again\n\n          </button>\n          <button\n            className=\"btn-feedback\"\n            data-testid=\"btn-ranking\"\n            type=\"button\"\n            onClick={ () => history.push('/ranking') }\n          >\n            Ranking\n\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  score: state.player.score,\n  assertions: state.player.assertions,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './ranking.css';\n\nclass Ranking extends Component {\n  render() {\n    const { history } = this.props;\n    const rankingData = JSON.parse(localStorage.getItem('ranking'));\n    if (rankingData !== null) {\n      rankingData.sort((a, b) => {\n        const CODENUMBER = -1;\n        if (a.score > b.score) return CODENUMBER;\n        return true;\n      });\n    }\n    return (\n      <div className='centraliza-raking'>\n        <h1 data-testid=\"ranking-title\">Ranking</h1>\n        <table className='centraliza-raking-result'>\n          <thead>\n            <tr className=\"ranking-header\">\n              <th>Foto de perfil</th>\n              <th>Nome</th>\n              <th>Score</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rankingData?.map((e, index) => (\n              <tr key={ index }>\n                <td>\n                  <img\n                    data-testid=\"header-profile-picture\"\n                    src=\"https://www.gravatar.com/avatar/c19ad9dbaf91c5533605fbf985177ccc\"\n                    alt=\"foto de perfil\"\n                  />\n\n                </td>\n                <td data-testid={ `player-name-${index}` }><h3>{e.name}</h3></td>\n                <td data-testid={ `player-score-${index}` }><h3>{e.score}</h3></td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <button\n          className='ranking-btn'\n          data-testid=\"btn-go-home\"\n          type=\"button\"\n          onClick={ () => history.push('/') }\n        >\n          login\n\n        </button>\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  score: state.player,\n});\n\nexport default connect(mapStateToProps)(Ranking);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Game from './pages/Game';\nimport Login from './pages/Login';\nimport Settings from './pages/Settings';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/game\" component={ Game } />\n      <Route path=\"/settings\" component={ Settings } />\n      <Route path=\"/feedback\" component={ Feedback } />\n      <Route path=\"/ranking\" component={ Ranking } />\n    </Switch>\n  );\n}\n","const INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nfunction player(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'player':\n    return {\n      name: action.state.name,\n      gravatarEmail: action.state.gravatarEmail,\n      token: action.state.token.token,\n      score: 0,\n      assertions: state.assertions,\n      question: action.state.question,\n    };\n  case 'button':\n    return {\n      ...state,\n      button: action.button,\n    };\n  case 'timer':\n    return {\n      ...state,\n      timer: action.state,\n    };\n  case 'score':\n    return {\n      ...state,\n      score: action.payload + state.score,\n      assertions: state.assertions + 1,\n    };\n  default:\n    return state;\n  }\n}\n\nif (window.Cypress) {\n  window.player = player;\n}\n\nexport default player;\n","import { combineReducers } from 'redux';\nimport player from './player';\n\nconst rootReducer = combineReducers({ player });\n\nif (window.Cypress) {\n  window.rootReducer = rootReducer;\n}\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={ process.env.PUBLIC_URL }>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}